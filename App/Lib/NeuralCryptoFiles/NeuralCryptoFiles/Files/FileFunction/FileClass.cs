using System;
using NeuralCryptoFiles.Files.SignatureFile;
using CryptoEngine.HashFunction;

namespace NeuralCryptoFiles.Files.FileFunction
{
    public static class Hash_Section
    {
        public static string Make(string file)
        {
            var hash = SHAFunction.GetHash(file, "SHA512", "base64");
            string beginHeader = "----- BEGIN NEURALCRYPTO FILE -----\n";
            string endHeader = "\n----- END NEURALCRYPTO FILE -----";

            return beginHeader + "Hash Section\n{\n\t" +
                "Hash Function : SHA512\n\t" +
                "Encoding : 0x64\n\t" +
                "Hash : " + hash + "\n}\n" + file + endHeader;
        }
    }


	public static class NeuralCrypto_Section
	{
		public static string Make()
		{
            return "NeuralCrypto Section\n{\n\tVersion : Alpha 1.0\n}";
        }

        public static void Read()
        {

        }
    }

    public static class FileIdentity_Section
    {
        public static string Make(SignFileParameters parameters, string type)
        {
            return "File Identity Section\n{\n\t" +
                "Type : " + type + "\n\t" +
                "Creation Date : " + DateTime.Now.ToString("dd/MM/yyyy HH:mm") + "\n\t" +
                "Expiration Date : " + parameters.expirationDate.ToString("dd/MM/yyyy HH:mm") + "\n\t" +
                "Author : " + parameters.author + "\n}";
        }
    }

    public static class Comment_Section
    {
        public static string Make(SignFileParameters parameters)
        {
            return "Comment Section\n{\n\tAuto-Generated Section : This file has been generated by NeuralCrypto using SHA-512;\n\t" +
                "Author-Comment : " + parameters.userComment + "\n}";
        }
    }

}

